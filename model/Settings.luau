local PRIVATE_SERVER_OWNER = if game:GetService("RunService"):IsServer() then game.PrivateServerOwnerId else nil

local Settings = {

	-- Automatically updates from the latest official MainModule version.
	-- Set to false to use the locally included MainModule instead.
	autoUpdate = true,

	-- Sets the prefix used to run commands in chat (e.g., ";cmd").
	prefix = ";",

	--[[
	Enables participation in the Kohl's Admin Games Hub.
	Promotes your game to players looking for games that support Kohl's Admin features.
	https://www.roblox.com/games/17873329124/Games-Hub-Kohls-Admin

	⚠️ Requires "Allow HTTP Requests" to be enabled in Game Settings > Security
	]]
	gameHubEnabled = true,

	-- Enables Kohl's Admin VIP donation features (required for games hub)
	vip = true,

	-- EXPERIMENTAL: Enables saving and syncing logs across servers.
	saveLogs = false,

	--[[
	Sets the minimum role required to see the Kohl's Admin Dashboard button in the Topbar.
		0	defaultRole
		1	vip
		2	mod
		3	admin
		4	superadmin
		5	creator

		false	Disable for every rank
	]]
	dashboardButtonRank = 0,

	-- Sets the minimum role required to trigger the Kohl's Admin join notification.
	joinNotificationRank = 1,

	-- Shows the "Enjoy Kohl's Admin?" popup to users.
	getKohlsAdminPopup = true,

	--[[
	[UserId] = {Username, Reason, Duration, fromUserId}

	Ban duration
		-1 forever
		0 server session
		>0 UTC time in seconds
	]]
	bans = {
		["2"] = { "John Doe", "He been noob.", nil, 44391621 },
		["3"] = { "Jane Doe", "She was noob.", 1720922623, 44391621 },
		["5"] = { nil, "Deleted account", -1, 44391621 },
	},

	-- Gives everyone access to the uncommented roles
	freeAdmin = {
		-- "creator",
		-- "superadmin",
		-- "admin",
		-- "mod",
		-- "vip",
	},

	groupRoles = {
		-- [groupId] = {
		-- { rank = 200, roles = { "admin", "vip" }, exactRank = false },
		-- },
	},

	--[[
	Accepts a list of UserIds, sourced from a Roblox profile
		For example;
			https://www.roblox.com/users/44391621/profile
			Has a UserId of 44391621
		Use "PRIVATE_SERVER_OWNER" for private servers!
	]]
	userRoles = {
		creator = {},
		superadmin = {},
		admin = {},
		mod = {},
		vip = { 1, 156, PRIVATE_SERVER_OWNER },
	},

	-- Role definitions with hierarchy, permissions, colors, and available command groups.
	roles = {
		default = { -- This role is given to everyone by default!
			-- role "_rank" determines hierarchy
			-- 0 is reserved for the default role
			_rank = 0,
			name = "Player",
			color = "#0ff",

			-- When enabled, users can only target themselves with player arguments.
			-- ⚠️ This does not affect commands that use UserIds directly!
			onlyTargetSelf = true,

			permissions = {
				-- this permission bypasses all restrictions (danger!)
				admin = false,
				-- can ban users via banasync, otherwise only per server session if has ban command
				banasync = false,
				-- allows the user to manage saved roles of other users with a lesser role
				saveRoles = false,
				-- can configure the global admin settings
				settings = false,
				-- can view server-side logs
				serverlogs = false,
			},

			-- allowed command groups
			groups = {
				-- "creator",
				-- "administration",
				-- "moderation",
				-- "environment",
				-- "general",
				-- "fun",
				-- "vip",
				"utility",
			},

			-- command overrides
			commands = {
				-- allow the help command
				help = true,
				-- disable the shutdown command if given to role by a command group
				shutdown = false,
			},

			-- Gives the role automatically if the user has the specified gamepass id
			gamepass = nil,
		},
		vip = {
			_rank = 1,
			name = "VIP",
			groups = { "vip" },
			permissions = {},
			color = "#0f8",
			onlyTargetSelf = true,
			gamepass = nil,
		},
		mod = {
			_rank = 2,
			name = "Moderator",
			groups = { "moderation", "general", "environment", "fun", "vip" },
			permissions = { serverlogs = true },
			color = "#0f0",
			gamepass = nil,
		},
		admin = {
			_rank = 3,
			name = "Administrator",
			groups = { "administration", "moderation", "general", "environment", "fun", "vip" },
			permissions = { banasync = true, serverlogs = true },
			color = "#ff0",
		},
		superadmin = {
			_rank = 4,
			name = "SuperAdmin",
			groups = { "superadmin", "administration", "moderation", "general", "environment", "fun", "vip" },
			permissions = { banasync = true, saveRoles = true, settings = true, serverlogs = true },
			color = "#f80",
		},
		creator = {
			_rank = math.huge,
			name = "Game Creator",
			permissions = { admin = true },
			color = "#f00",
		},
	},
}

return Settings
